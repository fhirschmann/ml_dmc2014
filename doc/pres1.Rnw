\documentclass[color=usenames,dvipsnames]{beamer}
\usetheme{Amsterdam}

\usepackage{amsmath}
\usepackage[mathletters]{ucs}
\usepackage[utf8x]{inputenc}
\usepackage{tikz}
\usepackage{verbatim}
\usepackage{listings}
\usepackage{pifont}
\usepackage{bibentry}
\usepackage{longtable}
\usepackage{listings}
\usepackage{multicol}
\usepackage{caption}

\title{Data Mining Cup 2010}
\subtitle{Group \texttt{R} Report}
\author{Fabian Hirschmann, Michael Markert, Simon Holthausen, Christoph Schatton}
\institute{Technische Universit√§t Darmstadt}
\date{April 2014}
\newcommand{\gcheck}{\textcolor{green}{\ding{52}}}
\newcommand{\rballot}{\textcolor{red}{\ding{55}}}

\setbeamercovered{transparent}
\setbeamertemplate{navigation symbols}{}

<<setup, echo=F, message=F, include=FALSE>>=
opts_chunk$set(echo=F, breaklines=T, fig.path="figure-pres1/")
opts_knit$set(root.dir="../")
library(xtable)
library(stats)
library(vcd)
library(plyr)
library(C50)
library(lubridate)

# Bug in xtable: doesn't print dates correctly
xtable <- function(x, ...) {
   for (i in which(sapply(x, function(y) !all(is.na(match(c("POSIXt","Date"),class(y))))))) x[[i]] <- as.character(x[[i]])
   xtable::xtable(x, ...)
}
@

<<load, echo=F>>=
source("R/data.R")
source("R/utils.R")
source("R/lib/parallelsets.R")
@

\begin{document}
\begin{frame}{}
  \titlepage
\end{frame}

%\begin{frame}
%\frametitle{Table of Contents}
%\tableofcontents
%\end{frame}

\section{Description}

\section{Data Analysis}

\begin{frame}{Predictors}
    \vspace{-0.2cm}
    \scriptsize
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    tbl <- df.classes(dt)

    colors <- c()
    colors[setdiff(names(dt), names(dt.c50))] <- "gray" # not used
    colors[setdiff(names(dt.c50), names(dt.raw))] <- "OliveGreen" # added
    colors[setdiff(names(dt.c50), names(colors))] <- "black" # used

    tbl$class <- mapply(function(n, t) paste("\\color{", colors[[n]], "}{", t, "}", sep=""),
                        rownames(tbl), tbl$class, USE.NAMES=F)

    split <- nrow(tbl) / 2
    print(xtable(head(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    print(xtable(tail(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
\end{frame}

\begin{frame}{Nominal Predictors Analysis}
    <<fig.height=4.5>>=
    x <- as.data.frame(structable(target90 ~ model + voucher + shippingcosts, data=dt))
    x$color <- ifelse(x$target90 == "yes", "#008888", "#330066")
    with(x, parallelset(target90, voucher, model, shippingcosts, col=color, freq=Freq))
    @
\end{frame}

\begin{frame}{Outlier: Promised Delivery Date}
    <<ddbefore, results="asis">>=
    outliers <- dt.unclean$deliverydatepromised > as.Date("2011-01-01")
    tbl2 <- dt.unclean[outliers,c("date", "deliverydatereal", "deliverydatepromised")]
    tbl2$promised.fixed <- dt[outliers,]$deliverydatepromised
    colnames(tbl2) <- c("date", "real", "promised", "\\textcolor{red}{promised.fix?}")

    print(xtable(tbl2), size="\\scriptsize", sanitize.text.function = function(x){x})
    dt.fix1 <- dt.unclean[!outliers,]
    @
    \pause
    \begin{center}
        \Large Not really
    \end{center}
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)")
        rug(dt.fix1$deliverydatediff)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)", ylim=c(0, 0.05))
        rug(dt.fix1$deliverydatediff)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)", ylim=c(0, 0.05))
        rug(dt.fix1$deliverydatediff)
        text(260, 0.02, "cut off?", col="red")
        abline(v=200, col="red")
        abline(v=-200, col="red")
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    smoothScatter(dt.fix1$deliverydatereal, dt.fix1$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(0, 1)
    abline(365, 1, col="red")
    text(14100, 14545, "One year sooner than promised", col="red", srt=26)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    t <- 250
    move <- dt.fix1$deliverydatediff > t & !is.na(dt.fix1$deliverydatediff)
    smoothScatter(dt.fix1$deliverydatereal, dt.fix1$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(t, 1, col="darkolivegreen4")
    abline(0, 1)
    text(14100, 14400, paste(t, "days sooner than promised"), col="darkolivegreen4", srt=26)
    text(14090, 14600, paste(length(which(move)), "outliers"), col="darkolivegreen4")
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    dt.fix2 <- dt.fix1
    dt.fix2[move,]$deliverydatepromised <- dt.fix2[move,]$deliverydatepromised - years(1)
    smoothScatter(dt.fix2$deliverydatereal, dt.fix2$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(0, 1)
    @
\end{frame}

\begin{frame}{Outlier: w0}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$w0, na.rm=T), main="Kernel Density Estimate",
             xlab="Number of bound books ordered")
        rug(dt.fix1$w0)
        arrows(x0=99, y0=0.3, x1=99, y1=0.05, col="red")
    @
\end{frame}

\begin{frame}{Outlier: w1}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$w1, na.rm=T), main="Kernel Density Estimate",
             xlab="Number of paperbacks ordered")
        rug(dt.fix1$w1)
        arrows(x0=70, y0=0.3, x1=70, y1=0.05, col="red")
        arrows(x0=84, y0=0.3, x1=84, y1=0.05, col="red")
    @
\end{frame}

\begin{frame}{Missing Values}
    <<results="asis", warnings=F>>=
    nas <- data.frame(cbind(df.nas(dt.unclean[, !names(dt.unclean) %in% c("target90"),]),
                            df.nas(dt.test.unclean)))
    colnames(nas) <- c("Train", "Test")
    nas$Train <- nas$Train / nrow(dt) * 100
    nas$Test <- nas$Test / nrow(dt.test) * 100
    nas <- nas[nas$Train > 0 | nas$Test > 0, ]
    nas$Strategy <- c("Use invoicepostcode", "Pseudo class 'NA'", "Median", "Median")
    print(xtable(nas, digits=4, caption="Missing values in percent. Predictors with no missing values are not shown."))
    @
\end{frame}

\begin{frame}{Class Freq Distribution}
    \Large Are class frequencies distributed equally in
    the Train and Test set?
\end{frame}


\begin{frame}{Class Freq Distribution: Example}
    <<results="asis">>=
    tbl <- data.frame(table(dt$model), table(dt.test$model))
    tbl$Var1.1 <- NULL
    colnames(tbl) <- c("model", "Train Freq", "Test Freq")
    print(xtable(tbl), include.rownames=F)
    @
    Null hypothesis: No (null) difference in the frequency distribution of classes in the
    train and test set.
    \begin{itemize}
        \item $\chi^2$-Test: If $p > 0.05$: Accept null hypothesis.
    \end{itemize}
\end{frame}

\begin{frame}{Class Freq Distribution: $\chi^2$-Test}
    <<chisq, results="asis">>=
    ps <- sapply(c("domain", "voucher", "model", "salutation", "paymenttype", "case",
                   "month", "weekday", "deliverytype", "entry", "instantorder"),
                 function(x) chisq.test(table2(dt[[x]], dt.test[[x]]))$p.value, simplify=F)
    df <- data.frame(t(data.frame(ps)))
    colnames(df) <- c("p")
    df$p2 <- df$p > 0.05
    colnames(df) <- c("p", "$p > 0.05$")
    print(xtable(df), sanitize.text.function = function(x){x})
    @
\end{frame}

\begin{frame}{Class Freq Distribution: 0-Probability Cases}
    \large $\chi^2$-Test not appropriate where the expectation for one or
    more category is $0$ (differing categories in Train/Test data).
\end{frame}

\begin{frame}{Class Freq Distribution: advertisingdatacode}
    <<fig.height=5>>=
    qplot(advertisingdatacode, fill=group,
          data=dt.merged[dt.merged$advertisingdatacode != "NA",], position="dodge")
    @
\end{frame}

\section{Results}

\begin{frame}[fragile]{Results: C5.0}
    \vspace{-0.8cm}
    \hspace{-0.5cm}
    <<message=F, warning=F, echo=F, fig.height=5>>=
    sb <- trellis.par.get("strip.background")
    sb[["col"]][1] <- "white"
    trellis.par.set("strip.background", sb) 

    plot(mds$c50)
    @
\end{frame}

\begin{frame}{Results: C5.0}
    <<fig.height=5>>=
    plot(varImp(mds$c50), top=20, main="Variable Importance")
    @
\end{frame}

\begin{frame}{}
    \tiny
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    tbl <- read.csv("task2010/points.txt", stringsAsFactors=F)
    colnames(tbl) <- c("Team", "Points")

    tbl <- rbind(tbl, c("R", 11480.5))
    tbl$Points <- as.numeric(tbl$Points)

    tbl <- tbl[order(tbl$Points, decreasing=T),]
    row.names(tbl) <- 1:nrow(tbl)

    split <- round(nrow(tbl) / 2)
    print(xtable(head(tbl, split), digits=1),
          sanitize.text.function = function(x){x}, hline.after=c(-1, 0, split, 11, 12))
    @
    \end{minipage}
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    print(xtable(tail(tbl, split), digits=1), sanitize.text.function = function(x){x})
    @
    \end{minipage}
\end{frame}


\section{Questions}
\begin{frame}{Questions}
    \Large Questions? Anyone?
\end{frame}

\end{document}
