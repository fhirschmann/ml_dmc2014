\documentclass[color=usenames,dvipsnames]{beamer}
\usetheme{Amsterdam}

\usepackage{amsmath}
\usepackage[mathletters]{ucs}
\usepackage[utf8x]{inputenc}
\usepackage{tikz}
\usepackage{verbatim}
\usepackage{listings}
\usepackage{pifont}
\usepackage{bibentry}
\usepackage{longtable}
\usepackage{listings}
\usepackage{multicol}
\usepackage{caption}
\usepackage{wasysym}

% frame numbers in short title
\newcommand*{\oldshorttitle}{}
\let\oldshorttitle\insertshorttitle
\renewcommand*{\insertshorttitle}{
  \oldshorttitle\hfill
  \insertframenumber\,/\,\inserttotalframenumber
}

\newcommand{\neutranie}{\tikz[baseline=-0.75ex,black]{
    \draw circle (2mm);
\node[fill,circle,inner sep=0.5pt] (left eye) at (135:0.8mm) {};
\node[fill,circle,inner sep=0.5pt] (right eye) at (45:0.8mm) {};
\draw (-135:0.9mm) -- (-45:0.9mm);
    }
}
\title{Data Mining Cup 2010}
\subtitle{Group \texttt{R} Report}
\author{Fabian Hirschmann, Michael Markert, Simon Holthausen}
\institute{Technische Universität Darmstadt}
\date{April 1\textsuperscript{st} 2014}
\newcommand{\gcheck}{\textcolor{green}{\ding{52}}}
\newcommand{\rballot}{\textcolor{red}{\ding{55}}}

\setbeamercovered{transparent}
\setbeamertemplate{navigation symbols}{}

<<setup, echo=F, message=F, include=FALSE>>=
opts_chunk$set(echo=F, breaklines=T, fig.path="figure-pres1/")
opts_knit$set(root.dir="../")
library(xtable)
library(stats)
library(vcd)
library(plyr)
library(C50)
library(lubridate)

@

<<load, echo=F>>=
source("R/data.R")
source("R/dmc.R")
source("R/fs.R")
source("R/utils.R")
source("R/lib/parallelsets.R")
@

\begin{document}
\begin{frame}{}
  \titlepage
\end{frame}

%\begin{frame}
%\frametitle{Table of Contents}
%\tableofcontents
%\end{frame}

\section{Description}

\begin{frame}{Problem Description}
\begin{itemize}
    \item DMC 2010: Revenue maximisation by intelligent couponing
    \item Onlineshop wants to give coupon to customers who would not buy again otherwise    
\end{itemize}
\end{frame}

\begin{frame}{Problem Description}
\begin{itemize}
    \item Learn \texttt{target90}: Does the customer buy again in the next 90 days?
    \item If target90 is \texttt{no}, give the customer a coupon worth 5€
    \item Results in a cost matrix:
    \begin{table}
    \begin{tabular}{l|c|r}
     & target90=\texttt{yes} & target90=\texttt{no} \\
     \hline
    coupon=\texttt{yes} & -5 & 1.5 \\
    coupon=\texttt{no} & 0 & 0 \\
    \end{tabular}
    \end{table}
    \item Achieved revenue calculated from the cost matrix, which
    corresponds to number of points for the DMC
\end{itemize}
\end{frame}


\begin{frame}{Predictors}
    \vspace{-0.2cm}
    \scriptsize
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis", message=F>>=
    tbl <- df.classes(dt)
    dt2 <- fs.all(dt)

    colors <- c()
    colors[setdiff(names(dt), names(dt2))] <- "black" # not used
    colors[setdiff(names(dt2), names(dt.raw))] <- "OliveGreen" # added
    colors[setdiff(names(dt2), names(colors))] <- "black" # used

    tbl$class <- mapply(function(n, t) paste("\\color{", colors[[n]], "}{", t, "}", sep=""),
                        rownames(tbl), tbl$class, USE.NAMES=F)

    split <- nrow(tbl) / 2
    print(xtable(head(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    print(xtable(tail(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
\end{frame}

\begin{frame}{Severe Class Imbalance}
    \begin{minipage}[t]{0.54\columnwidth}
    \begin{itemize}
        \item Imbalance causes some models to always predict \texttt{no}
    \end{itemize}
    \vspace{0.5cm}
    \end{minipage}
    \begin{minipage}[t]{0.44\columnwidth}
        <<fig.height=10>>=
        plot(dt$target90, main="Target Attribute", xlab="Class", ylab="Count")
        @
    \end{minipage}
\end{frame}

\section{Data Analysis}

\begin{frame}{Outlier: Promised Delivery Date}
    <<ddbefore, results="asis">>=
    outliers <- dt.unclean$deliverydatepromised > as.Date("2011-01-01")
    tbl2 <- dt.unclean[outliers,c("date", "deliverydatereal", "deliverydatepromised")]
    tbl2$promised.fixed <- dt[outliers,]$deliverydatepromised
    colnames(tbl2) <- c("date", "real", "promised", "\\textcolor{red}{promised.fix?}")

    print(xtable(tbl2), size="\\scriptsize", sanitize.text.function = function(x){x})
    dt.fix1 <- dt.unclean[!outliers,]
    @
    \pause
    \begin{center}
        \Large Not really
    \end{center}
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)")
        rug(dt.fix1$deliverydatediff)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)", ylim=c(0, 0.05))
        rug(dt.fix1$deliverydatediff)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$deliverydatediff, na.rm=T), main="Kernel Density Estimate",
             xlab="Delivery Date Promised - Real (days)", ylim=c(0, 0.05))
        rug(dt.fix1$deliverydatediff)
        text(260, 0.02, "cut off?", col="red")
        abline(v=200, col="red")
        abline(v=-200, col="red")
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    smoothScatter(dt.fix1$deliverydatereal, dt.fix1$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(0, 1)
    abline(365, 1, col="red")
    text(14100, 14545, "One year sooner than promised", col="red", srt=26)
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    t <- 250
    move <- dt.fix1$deliverydatediff > t & !is.na(dt.fix1$deliverydatediff)
    smoothScatter(dt.fix1$deliverydatereal, dt.fix1$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(t, 1, col="darkolivegreen4")
    abline(0, 1)
    text(14100, 14400, paste(t, "days sooner than promised"), col="darkolivegreen4", srt=26)
    text(14090, 14600, paste(length(which(move)), "outliers"), col="darkolivegreen4")
    @
\end{frame}

\begin{frame}{Outlier: Real vs Promised Delivery Date}
    <<fig.height=5, warning=F, message=F>>=
    dt.fix2 <- dt.fix1
    dt.fix2[move,]$deliverydatepromised <- dt.fix2[move,]$deliverydatepromised - years(1)
    smoothScatter(dt.fix2$deliverydatereal, dt.fix2$deliverydatepromised,
                  xlab="Delivery Date Real", ylab="Delivery Date Promised",
                  main="Delivery Date Real vs Promised")
    abline(0, 1)
    @
\end{frame}

\begin{frame}{Outlier: w0}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$w0, na.rm=T), main="Kernel Density Estimate",
             xlab="Number of bound books ordered")
        rug(dt.fix1$w0)
        arrows(x0=99, y0=0.3, x1=99, y1=0.05, col="red")
    @
\end{frame}

\begin{frame}{Outlier: w1}
    <<echo=F, message=F, warning=F, fig.height=5>>=
        plot(density(dt.fix1$w1, na.rm=T), main="Kernel Density Estimate",
             xlab="Number of paperbacks ordered")
        rug(dt.fix1$w1)
        arrows(x0=70, y0=0.3, x1=70, y1=0.05, col="red")
        arrows(x0=84, y0=0.3, x1=84, y1=0.05, col="red")
    @
\end{frame}

\begin{frame}{Dealing with Missing Values}
    <<results="asis", warnings=F>>=
    nas <- data.frame(cbind(df.nas(dt.unclean[, !names(dt.unclean) %in% c("target90"),]),
                            df.nas(dt.test.unclean)))
    colnames(nas) <- c("Train", "Test")
    nas$Train <- nas$Train / nrow(dt) * 100
    nas$Test <- nas$Test / nrow(dt.test) * 100
    nas <- nas[nas$Train > 0 | nas$Test > 0, ]
    nas$Strategy <- c("Use invoicepostcode", "Pseudo class 'NA'", "Adjust", "Adjust")
    print(xtable(nas, digits=4, caption="Missing values in percent. Predictors with no missing values are not shown."))
    @
\end{frame}

\begin{frame}{Label Freq Distribution}
    \Large Are labels distributed equally in the Train and Test Set
    for nominal predictors?
\end{frame}

\begin{frame}{Label Freq Distribution: Example}
    <<results="asis">>=
    tbl <- data.frame(table(dt$salutation), table(dt.test$salutation))
    tbl$Var1.1 <- NULL
    colnames(tbl) <- c("model", "Train Freq", "Test Freq")
    print(xtable(tbl), include.rownames=F)
    @
    Null hypothesis: No (null) difference in the frequency distribution of classes in the
    train and test set.
    \begin{itemize}
        \item $\chi^2$-Test: If $p > 0.05$: Accept null hypothesis.
    \end{itemize}
\end{frame}

\begin{frame}{Label Freq Distribution: $\chi^2$-Test}
    <<chisq, results="asis">>=
    ps <- sapply(c("domain", "voucher", "model", "salutation", "paymenttype", "case",
                   "month", "weekday", "deliverytype", "entry", "instantorder"),
                 function(x) chisq.test(table2(dt[[x]], dt.test[[x]]))$p.value, simplify=F)
    df <- data.frame(t(data.frame(ps)))
    colnames(df) <- c("p")
    df$p2 <- df$p > 0.05
    colnames(df) <- c("p", "$p > 0.05$")
    print(xtable(df), sanitize.text.function = function(x){x})
    @
\end{frame}

\begin{frame}{Label Freq Distribution: 0-Probability Cases}
    \large $\chi^2$-Test not appropriate where the expectation for one or
    more label is $0$ (differing labels in Train/Test data).
\end{frame}

\begin{frame}{Label Freq Distribution: advertisingdatacode}
    <<fig.height=5>>=
    qplot(advertisingdatacode, fill=group,
          data=dt.merged[dt.merged$advertisingdatacode != "NA",], position="dodge")
    @
\end{frame}

\section{Feature Selection}

\begin{frame}{Feature Selection}
    \begin{itemize}
        \item Not using \texttt{deliverydatediff} yields better results!
        \pause
        \item Same is true for \texttt{advertisingdatacode}
        \item And \texttt{delivpostcode}...
        \item And \texttt{invoicepostcode}...
        \item And \texttt{domain}...
        \item And ...
    \end{itemize}
\end{frame}

\begin{frame}{Feature Selection: Selected Predictors}
    \vspace{-0.2cm}
    \scriptsize
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    tbl <- df.classes(dt)

    colors <- c()
    colors[setdiff(names(dt), names(dt2))] <- "gray" # not used
    colors[setdiff(names(dt2), names(dt.raw))] <- "OliveGreen" # added
    colors[setdiff(names(dt2), names(colors))] <- "black" # used

    tbl$class <- mapply(function(n, t) paste("\\color{", colors[[n]], "}{", t, "}", sep=""),
                        rownames(tbl), tbl$class, USE.NAMES=F)

    split <- nrow(tbl) / 2
    print(xtable(head(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    print(xtable(tail(tbl, split)), include.colnames=F, hline.after=c(-1, split),
          sanitize.text.function = function(x){x})
    @
    \end{minipage}
\end{frame}

\section{Tuning}

\begin{frame}[fragile]{Tuning: C5.0}
    \vspace{-0.8cm}
    \hspace{-0.5cm}
    <<message=F, warning=F, echo=F, fig.height=5>>=
    sb <- trellis.par.get("strip.background")
    sb[["col"]][1] <- "white"
    trellis.par.set("strip.background", sb) 

    plot(mds$c50)
    @
\end{frame}

\begin{frame}{Tuning: C5.0}
    <<fig.height=5>>=
    plot(varImp(mds$c50), top=20, main="Variable Importance (Top 20)")
    grid()
    @
\end{frame}

\begin{frame}{Tuning: Random Forest}
    <<fig.height=4.7>>=
    p <- dmc.tunecut(caret.prob(mds$rf, fix.nas=c(0.81, 0.19)), caret.obs(mds$rf))
    plot(names(p), p / dmc.points(dt$target90, dt$target90),
         type="l", main="Cutoff vs PointsRatio",
         xlab="Cutoff Point", ylab="PointsRatio")
    grid()
    abline(v=0.5, col="grey")
    abline(v=names(which(p == max(p))), col="red")
    @
\end{frame}

\begin{frame}{Tuning: Naive Bayes}
    <<fig.height=4.7>>=
    p <- dmc.tunecut(caret.prob(mds$nb, fix.nas=c(0.81, 0.19)), caret.obs(mds$nb))
    plot(names(p), p / dmc.points(dt$target90, dt$target90),
         type="l", main="Cutoff vs PointsRatio",
         xlab="Cutoff Point", ylab="PointsRatio")
    abline(v=0.5, col="grey")
    abline(v=names(which(p == max(p))), col="red")
    grid()
    @
\end{frame}

\begin{frame}{Model Selection}
    \footnotesize
    <<results="asis">>=
    of.interest <- c("c50", "nb_t", "nb", "rf_t", "rf")
    res.train <- dmc.evaluate.train()
    #res.test <- read.csv("doc/results_test.csv", row.names=1)

    print(xtable(res.train))
    @
\end{frame}

\section{Results}

\begin{frame}{}
    \tiny
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    tbl <- read.csv("task2010/points.txt", stringsAsFactors=F)
    colnames(tbl) <- c("Team", "Points")

    tbl <- rbind(tbl, c("R", 11895.5))
    tbl$Points <- as.numeric(tbl$Points)

    tbl <- tbl[order(tbl$Points, decreasing=T),]
    row.names(tbl) <- 1:nrow(tbl)

    split <- round(nrow(tbl) / 2)
    print(xtable(head(tbl, split), digits=1),
          sanitize.text.function = function(x){x}, hline.after=c(-1, 0, split, 9, 10))
    @
    \end{minipage}
    \begin{minipage}[t]{0.49\columnwidth}
    <<results="asis">>=
    print(xtable(tail(tbl, split), digits=1), sanitize.text.function = function(x){x})
    @
    \end{minipage}
\end{frame}

\begin{frame}{Results: Top 15}
    \footnotesize
    <<results="asis">>=
    tbl$Difference <- tbl$Points - 12545.5
    tbl[["Difference (%)"]] <- - (1 - tbl$Points / 12545.5) * 100
    print(xtable(head(tbl, 15)))
    @
\end{frame}

\begin{frame}{Conclusion}
    \begin{itemize}
        \item Most important steps:
        \begin{itemize}
            \item Understanding the data
            \item Domain Specific Knowledge
            \item Feature Engineering
            \item Attribute Selection
            \item In a competition, the algorithm \emph{is} important
        \end{itemize}
        \item Removing outliers isn't the only strategy available
        \item Some of the groups even lost money in the process
        \begin{itemize}
            \item Overfitting?
        \end{itemize}
    \end{itemize}
\end{frame}

\begin{frame}[fragile]{Interesting Observation}
    <<echo=F>>=
    real <- read.csv("task2010/dmc2010_real.txt", sep=";")
    colnames(real) <- c("customernumber", "target90")
    real$target90 <- revalue(as.factor(real$target90), c("1"="yes", "0"="no"))
    @
    <<pttest, echo=T>>=
    dmc.points(rep("no", nrow(dt)), dt$target90)
    @
    <<pt, echo=T>>=
    dmc.points(rep("no", nrow(real)), real$target90)
    @
    $\rightarrow$ Place 37 (of 60) \smiley
\end{frame}

\begin{frame}{Outlook}
    Things not (really) done:
    \begin{itemize}
        \item Cross-model Ensembles/Stacking
        \item Per-model Feature Selection
        \item Serious Feature Engineering mindstorming thing
    \end{itemize}
\end{frame}

\section{Questions}
\begin{frame}{Questions}
    \Large Questions? Anyone?
\end{frame}

\end{document}
